{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEaC,SACVC,cAAc,SACdC,iBAAiB,UAEpB,SAA0BC,GACxBA,EAAEC,iBAQF,IANA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEjBC,EAAeC,OAAOJ,EAAMK,OAC5BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAeH,OAAOF,EAAOG,OAExBG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtCC,EAAcD,EAAGL,GAAcO,KAAKC,GAAWC,MAAMC,GAErDV,GAAgBG,EAElBQ,YAAW,WACTnB,EAAEG,OAAOiB,O,GACRZ,E,IAGL,SAASM,EAAcO,EAAUhB,GAC/B,IAAMiB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BR,YAAW,WACLG,GACFI,EAAQ,CAAEL,WAAUhB,UAGtBsB,EAAO,CAAEN,WAAUhB,S,GAClBA,E,IAIP,SAASW,EAAUY,G,IAAEP,EAAFO,EAAEP,SAAUhB,EAAZuB,EAAYvB,MAC7BV,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAfV,EAAS,QAAYU,OAAN1B,EAAM,M,CAE/D,SAASa,EAAWU,G,IAAEP,EAAFO,EAAEP,SAAUhB,EAAZuB,EAAYvB,MAC9BV,EAAAkC,OAAOG,QAAQ,sBAAqCD,OAAfV,EAAS,QAAYU,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document\n  .querySelector('.form')\n  .addEventListener('submit', handleSubmitform);\n\nfunction handleSubmitform(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n\n  let currentDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let amountNumber = Number(amount.value);\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, currentDelay).then(onSuccess).catch(onRejected);\n\n    currentDelay += delayStep;\n  }\n  setTimeout(() => {\n    e.target.reset();\n  }, currentDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onRejected({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","delay","step","amount","currentDelay","Number","value","delayStep","amountNumber","i","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onSuccess","catch","$ce04d3a99e08e73b$var$onRejected","setTimeout","reset","position","shouldResolve","Math","random","Promise","resolve","reject","param","Notify","success","concat","failure"],"version":3,"file":"03-promises.4a5acc4a.js.map"}